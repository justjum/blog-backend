// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  username String    @unique
  f_name   String
  l_name   String
  email    String
  password String
  isAuthor Boolean   @default(false)
  Post     Post[]
  Comment  Comment[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Post {
  id          String    @id @default(uuid()) @db.Uuid
  author      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @db.Uuid
  title       String
  keyword     String[]
  text        String
  image       String    @default("")
  imageThumb  String    @default("")
  createdAt   DateTime  @default(now())
  Comment     Comment[]
  published   Boolean   @default(false)
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  author    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.Uuid
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @db.Uuid
  text      String
  createdAt DateTime @default(now())
}
